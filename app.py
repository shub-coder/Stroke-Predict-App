# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11lWyavxwnH0UzvlpaeOoxvmsCG2ikhRK
"""

from flask import Flask, render_template, request
import jsonify
import requests
import pickle
import numpy as np
import sklearn
from sklearn.preprocessing import StandardScaler
app = Flask(__name__)
model = pickle.load(open('xgboost_model.pkl', 'rb'))
@app.route('/',methods=['GET'])
def Home():
    return render_template('index.html')


standard_to = StandardScaler()
@app.route("/predict", methods=['POST'])
def predict():
    Fuel_Type_Diesel=0
    if request.method == 'POST':
        age = int(request.form['Age'])
        #age = standard_to.transform(age)
        gender=int(request.form['gender'])
        #gender = standard_to.transform(gender)
        hypertension=int(request.form['hypertension'])
        
        heart_disease=int(request.form['heart_disease'])
        #heart_disease = standard_to.transform(heart_disease)
        ever_married=int(request.form['ever_married'])
        #ever_married = standard_to.transform(ever_married)
        
        work_type=request.form['work_type']
        if(work_type=='Self-employed'):
            work_type=1
        elif(work_type=='Private'):
          work_type=0
        elif(work_type=='Govt_job'):
          work_type=2  
        elif(work_type=='children'):
          work_type=3
        elif(work_type=='Never_worked'):
          work_type=4       

        #work_type = standard_to.transform(work_type)  
        Residence_type=request.form['Residence_type']
        if(Residence_type=='Urban'):
            Residence_type=0
            
        elif(Residence_type=='Rural'):
          Residence_type=1
        #Residence_type = standard_to.transform(Residence_type)     
        avg_glucose_level=int(request.form['avg_glucose_level']) 
        #avg_glucose_level = standard_to.transform(avg_glucose_level)
        bmi=int(request.form['bmi'])
        #bmi = standard_to.transform(bmi)
        smoking_status=int(request.form['smoking_status'])
        #smoking_status = standard_to.transform(smoking_status) 
        #data = standard_to.fit_transform([[age,hypertension,heart_disease,ever_married,Residence_type,avg_glucose_level, bmi,gender,work_type,smoking_status]])  
        prediction=model.predict([[age,hypertension,heart_disease,ever_married,Residence_type,avg_glucose_level, bmi,gender,work_type,smoking_status]])
        #prediction = model.predict(data)
        output=round(prediction[0],2)
        if output==0:
            return render_template('index.html',prediction_text="Good news for you!! You have maintained your health well. You Are pretty much safe from Stroke.")
        elif output==1:
            return render_template('index.html',prediction_text="As per your answers to all our questions you are at high risk of Stroke. Contact your Doctor immediately for accurate diagnosis and early treatment")
    else:
        return render_template('index.html')

if __name__=="__main__":
    app.run(debug=True)

